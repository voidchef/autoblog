name: Node.js CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

# Auto-cancel previous runs for same branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

env:
  PORT: 3000
  MONGODB_URL: mongodb://127.0.0.1:27017/autoblog
  JWT_SECRET: thisisasamplesecret
  JWT_ACCESS_EXPIRATION_MINUTES: 30
  JWT_REFRESH_EXPIRATION_DAYS: 30
  JWT_RESET_PASSWORD_EXPIRATION_MINUTES: 10
  JWT_VERIFY_EMAIL_EXPIRATION_MINUTES: 10
  CLIENT_URL: http://localhost:5173

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      node-version: ${{ steps.node-version.outputs.value }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        id: node-version
        uses: actions/setup-node@v6
        with:
          node-version: 22.x
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

  test:
    runs-on: ubuntu-latest
    needs: setup

    services:
      mongodb:
        image: mongo:8.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand({ ping: 1 })'"
          --health-interval=5s
          --health-timeout=2s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: 22.x
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build TypeScript
        run: pnpm compile

      - name: Run lint
        run: pnpm lint

      - name: Run tests
        run: pnpm test

      - name: Upload coverage artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage/lcov.info

  coverage:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Download coverage report
        uses: actions/download-artifact@v4
        with:
          name: coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          files: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          verbose: true